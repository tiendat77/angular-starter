import { NgClass, NgFor, NgIf, NgTemplateOutlet } from '@angular/common';
import { ChangeDetectionStrategy, Component, forwardRef, Input, } from '@angular/core';
import { SvgIconModule } from '@libs/svg-icon';
import { Subject, takeUntil } from 'rxjs';
import { HorizontalNavigationBasicItemComponent } from '../basic/basic.component';
import { HorizontalNavigationDividerItemComponent } from '../divider/divider.component';
import * as i0 from "@angular/core";
import * as i1 from "../../../navigation.service";
import * as i2 from "@libs/svg-icon";
export class HorizontalNavigationBranchItemComponent {
    _changeDetectorRef;
    _navigationService;
    static ngAcceptInputType_child;
    child = false;
    item;
    name;
    _horizontalNavigationComponent;
    _unsubscribeAll = new Subject();
    constructor(_changeDetectorRef, _navigationService) {
        this._changeDetectorRef = _changeDetectorRef;
        this._navigationService = _navigationService;
    }
    // -----------------------------------------------------------------------------------------------------
    // @ Lifecycle hooks
    // -----------------------------------------------------------------------------------------------------
    ngOnInit() {
        // Get the parent navigation component
        this._horizontalNavigationComponent = this._navigationService.getComponent(this.name);
        // Subscribe to onRefreshed on the navigation component
        this._horizontalNavigationComponent.onRefreshed
            .pipe(takeUntil(this._unsubscribeAll))
            .subscribe(() => {
            // Mark for check
            this._changeDetectorRef.markForCheck();
        });
    }
    ngOnDestroy() {
        this._unsubscribeAll.next(null);
        this._unsubscribeAll.complete();
    }
    // -----------------------------------------------------------------------------------------------------
    // @ Public methods
    // -----------------------------------------------------------------------------------------------------
    triggerChangeDetection() {
        // Mark for check
        this._changeDetectorRef.markForCheck();
    }
    trackByFn(index, item) {
        return item.id || index;
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: HorizontalNavigationBranchItemComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.NavigationService }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.13", type: HorizontalNavigationBranchItemComponent, isStandalone: true, selector: "horizontal-navigation-branch-item", inputs: { child: "child", item: "item", name: "name" }, ngImport: i0, template: "@if (!child) {\n  <div class=\"dropdown dropdown-bottom\">\n    <div\n      tabindex=\"0\"\n      [ngClass]=\"{\n        'horizontal-navigation-menu-active-forced': item.active,\n      }\"\n    >\n      <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: item }\" />\n    </div>\n\n    <div\n      tabindex=\"0\"\n      class=\"menu dropdown-content z-[1] min-w-52 rounded-box bg-base-100 p-2 shadow\"\n    >\n      @for (item of item.children; track item.id) {\n        <!-- Skip the hidden items -->\n        @if ((item.hidden && !item.hidden(item)) || !item.hidden) {\n          <!-- Basic -->\n          @if (item.type === 'basic') {\n            <div\n              class=\"horizontal-navigation-menu-item\"\n              mat-menu-item\n            >\n              <horizontal-navigation-basic-item\n                [item]=\"item\"\n                [name]=\"name\"\n              />\n            </div>\n          }\n\n          <!-- Branch: aside, collapsable, group -->\n          <!-- @if (item.type === 'aside' || item.type === 'collapsable' || item.type === 'group') {\n            <div\n              class=\"horizontal-navigation-menu-item\"\n              [disabled]=\"item.disabled\"\n              [matMenuTriggerFor]=\"branch.matMenu\"\n              mat-menu-item>\n              <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: item}\">}\n              <horizontal-navigation-branch-item\n                [child]=\"true\"\n                [item]=\"item\"\n                [name]=\"name\"\n                #branch></horizontal-navigation-branch-item>\n            </div>\n          } -->\n\n          <!-- Divider -->\n          @if (item.type === 'divider') {\n            <div\n              class=\"horizontal-navigation-menu-item\"\n              mat-menu-item\n            >\n              <horizontal-navigation-divider-item\n                [item]=\"item\"\n                [name]=\"name\"\n              />\n            </div>\n          }\n        }\n      }\n    </div>\n  </div>\n}\n\n<!-- Item template -->\n<ng-template\n  #itemTemplate\n  let-item\n>\n  <div\n    class=\"horizontal-navigation-item-wrapper\"\n    [class.horizontal-navigation-item-has-subtitle]=\"!!item.subtitle\"\n    [ngClass]=\"item.classes?.wrapper\"\n  >\n    <div\n      class=\"horizontal-navigation-item\"\n      [ngClass]=\"{\n        'horizontal-navigation-item-disabled': item.disabled,\n        'horizontal-navigation-item-active-forced': item.active,\n      }\"\n    >\n      <!-- Icon -->\n      @if (item.icon) {\n        <svg-icon\n          class=\"horizontal-navigation-item-icon\"\n          [ngClass]=\"item.classes?.icon\"\n          [name]=\"item.icon\"\n        />\n      }\n\n      <!-- Title & Subtitle -->\n      <div class=\"horizontal-navigation-item-title-wrapper\">\n        <div class=\"horizontal-navigation-item-title\">\n          <span [ngClass]=\"item.classes?.title\">\n            {{ item.title }}\n          </span>\n        </div>\n        @if (item.subtitle) {\n          <div class=\"horizontal-navigation-item-subtitle text-hint\">\n            <span [ngClass]=\"item.classes?.subtitle\">\n              {{ item.subtitle }}\n            </span>\n          </div>\n        }\n      </div>\n\n      <!-- Badge -->\n      @if (item.badge) {\n        <div class=\"horizontal-navigation-item-badge\">\n          <div\n            class=\"horizontal-navigation-item-badge-content\"\n            [ngClass]=\"item.badge.classes\"\n          >\n            {{ item.badge.title }}\n          </div>\n        </div>\n      }\n    </div>\n  </div>\n</ng-template>\n", dependencies: [{ kind: "directive", type: i0.forwardRef(() => NgClass), selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i0.forwardRef(() => NgTemplateOutlet), selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "ngmodule", type: i0.forwardRef(() => SvgIconModule) }, { kind: "component", type: i0.forwardRef(() => i2.SvgIcon), selector: "svg-icon", inputs: ["inline", "name", "fontSet", "fontIcon"], exportAs: ["svgIcon"] }, { kind: "component", type: i0.forwardRef(() => HorizontalNavigationBasicItemComponent), selector: "horizontal-navigation-basic-item", inputs: ["item", "name"] }, { kind: "component", type: i0.forwardRef(() => HorizontalNavigationDividerItemComponent), selector: "horizontal-navigation-divider-item", inputs: ["item", "name"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: HorizontalNavigationBranchItemComponent, decorators: [{
            type: Component,
            args: [{ selector: 'horizontal-navigation-branch-item', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [
                        NgIf,
                        NgClass,
                        NgTemplateOutlet,
                        NgFor,
                        SvgIconModule,
                        HorizontalNavigationBasicItemComponent,
                        HorizontalNavigationDividerItemComponent,
                        forwardRef(() => HorizontalNavigationBranchItemComponent),
                    ], template: "@if (!child) {\n  <div class=\"dropdown dropdown-bottom\">\n    <div\n      tabindex=\"0\"\n      [ngClass]=\"{\n        'horizontal-navigation-menu-active-forced': item.active,\n      }\"\n    >\n      <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: item }\" />\n    </div>\n\n    <div\n      tabindex=\"0\"\n      class=\"menu dropdown-content z-[1] min-w-52 rounded-box bg-base-100 p-2 shadow\"\n    >\n      @for (item of item.children; track item.id) {\n        <!-- Skip the hidden items -->\n        @if ((item.hidden && !item.hidden(item)) || !item.hidden) {\n          <!-- Basic -->\n          @if (item.type === 'basic') {\n            <div\n              class=\"horizontal-navigation-menu-item\"\n              mat-menu-item\n            >\n              <horizontal-navigation-basic-item\n                [item]=\"item\"\n                [name]=\"name\"\n              />\n            </div>\n          }\n\n          <!-- Branch: aside, collapsable, group -->\n          <!-- @if (item.type === 'aside' || item.type === 'collapsable' || item.type === 'group') {\n            <div\n              class=\"horizontal-navigation-menu-item\"\n              [disabled]=\"item.disabled\"\n              [matMenuTriggerFor]=\"branch.matMenu\"\n              mat-menu-item>\n              <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: item}\">}\n              <horizontal-navigation-branch-item\n                [child]=\"true\"\n                [item]=\"item\"\n                [name]=\"name\"\n                #branch></horizontal-navigation-branch-item>\n            </div>\n          } -->\n\n          <!-- Divider -->\n          @if (item.type === 'divider') {\n            <div\n              class=\"horizontal-navigation-menu-item\"\n              mat-menu-item\n            >\n              <horizontal-navigation-divider-item\n                [item]=\"item\"\n                [name]=\"name\"\n              />\n            </div>\n          }\n        }\n      }\n    </div>\n  </div>\n}\n\n<!-- Item template -->\n<ng-template\n  #itemTemplate\n  let-item\n>\n  <div\n    class=\"horizontal-navigation-item-wrapper\"\n    [class.horizontal-navigation-item-has-subtitle]=\"!!item.subtitle\"\n    [ngClass]=\"item.classes?.wrapper\"\n  >\n    <div\n      class=\"horizontal-navigation-item\"\n      [ngClass]=\"{\n        'horizontal-navigation-item-disabled': item.disabled,\n        'horizontal-navigation-item-active-forced': item.active,\n      }\"\n    >\n      <!-- Icon -->\n      @if (item.icon) {\n        <svg-icon\n          class=\"horizontal-navigation-item-icon\"\n          [ngClass]=\"item.classes?.icon\"\n          [name]=\"item.icon\"\n        />\n      }\n\n      <!-- Title & Subtitle -->\n      <div class=\"horizontal-navigation-item-title-wrapper\">\n        <div class=\"horizontal-navigation-item-title\">\n          <span [ngClass]=\"item.classes?.title\">\n            {{ item.title }}\n          </span>\n        </div>\n        @if (item.subtitle) {\n          <div class=\"horizontal-navigation-item-subtitle text-hint\">\n            <span [ngClass]=\"item.classes?.subtitle\">\n              {{ item.subtitle }}\n            </span>\n          </div>\n        }\n      </div>\n\n      <!-- Badge -->\n      @if (item.badge) {\n        <div class=\"horizontal-navigation-item-badge\">\n          <div\n            class=\"horizontal-navigation-item-badge-content\"\n            [ngClass]=\"item.badge.classes\"\n          >\n            {{ item.badge.title }}\n          </div>\n        </div>\n      }\n    </div>\n  </div>\n</ng-template>\n" }]
        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.NavigationService }], propDecorators: { child: [{
                type: Input
            }], item: [{
                type: Input
            }], name: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,