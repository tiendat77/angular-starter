{"version":3,"file":"libs-toast.mjs","sources":["../../src/lib/toast.animation.ts","../../src/lib/toast.ref.ts","../../src/lib/toast.config.ts","../../src/lib/toast.component.ts","../../src/lib/toast.component.html","../../src/lib/toast.container.ts","../../src/lib/toast.service.ts","../../src/lib/toast.module.ts","../../src/lib/toast.provider.ts","../../src/public-api.ts","../../src/libs-toast.ts"],"sourcesContent":["import {\n  AnimationTriggerMetadata,\n  trigger,\n  state,\n  transition,\n  style,\n  animate,\n} from '@angular/animations';\n\nexport const toastAnimations: {\n  readonly toastState: AnimationTriggerMetadata;\n} = {\n  toastState: trigger('state', [\n    state(\n      'void, hidden',\n      style({\n        transform: 'scale(0.8)',\n        opacity: 0,\n      })\n    ),\n    state(\n      'visible',\n      style({\n        transform: 'scale(1)',\n        opacity: 1,\n      })\n    ),\n    transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n    transition(\n      '* => void, * => hidden',\n      animate(\n        '75ms cubic-bezier(0.4, 0.0, 1, 1)',\n        style({\n          opacity: 0,\n        })\n      )\n    ),\n  ]),\n};\n\nexport type ToastAnimationState = 'default' | 'closing';\n","import { OverlayRef } from '@angular/cdk/overlay';\nimport { Observable, Subject } from 'rxjs';\nimport { ToastContainerComponent } from './toast.container';\n\n/** Event that is emitted when a toast is dismissed. */\nexport interface ToastDismiss {\n  /** Whether the toast was dismissed using the action button. */\n  dismissedByAction: boolean;\n}\n\n/** Maximum amount of milliseconds that can be passed into setTimeout. */\nconst MAX_TIMEOUT = Math.pow(2, 31) - 1;\n\n/**\n * Reference to a toast dispatched from the toast service.\n */\nexport class ToastRef<T> {\n  /** The instance of the component making up the content of the toast. */\n  instance: T;\n\n  /**\n   * The instance of the component making up the content of the toast.\n   * @docs-private\n   */\n  containerInstance: ToastContainerComponent;\n\n  /** Subject for notifying the user that the toast has been dismissed. */\n  private readonly _afterDismissed = new Subject<ToastDismiss>();\n\n  /** Subject for notifying the user that the toast has opened and appeared. */\n  private readonly _afterOpened = new Subject<void>();\n\n  /** Subject for notifying the user that the toast action was called. */\n  private readonly _onAction = new Subject<void>();\n\n  /**\n   * Timeout ID for the duration setTimeout call. Used to clear the timeout if the toast is\n   * dismissed before the duration passes.\n   */\n  private _durationTimeoutId: number | any;\n\n  /** Whether the toast was dismissed using the action button. */\n  private _dismissedByAction = false;\n\n  constructor(\n    containerInstance: ToastContainerComponent,\n    private _overlayRef: OverlayRef\n  ) {\n    this.containerInstance = containerInstance;\n    containerInstance._onExit.subscribe(() => this._finishDismiss());\n  }\n\n  /** Dismisses the toast. */\n  dismiss(): void {\n    if (!this._afterDismissed.closed) {\n      this.containerInstance.exit();\n    }\n    clearTimeout(this._durationTimeoutId);\n  }\n\n  /** Marks the toast action clicked. */\n  dismissWithAction(): void {\n    if (!this._onAction.closed) {\n      this._dismissedByAction = true;\n      this._onAction.next();\n      this._onAction.complete();\n      this.dismiss();\n    }\n    clearTimeout(this._durationTimeoutId);\n  }\n\n  /**\n   * Marks the toast action clicked.\n   * @deprecated Use `dismissWithAction` instead.\n   * @breaking-change 8.0.0\n   */\n  closeWithAction(): void {\n    this.dismissWithAction();\n  }\n\n  /** Dismisses the toast after some duration */\n  _dismissAfter(duration: number): void {\n    // Note that we need to cap the duration to the maximum value for setTimeout, because\n    // it'll revert to 1 if somebody passes in something greater (e.g. `Infinity`). See #17234.\n    this._durationTimeoutId = setTimeout(() => this.dismiss(), Math.min(duration, MAX_TIMEOUT));\n  }\n\n  /** Marks the toast as opened */\n  _open(): void {\n    if (!this._afterOpened.closed) {\n      this._afterOpened.next();\n      this._afterOpened.complete();\n    }\n  }\n\n  /** Cleans up the DOM after closing. */\n  private _finishDismiss(): void {\n    this._overlayRef.dispose();\n\n    if (!this._onAction.closed) {\n      this._onAction.complete();\n    }\n\n    this._afterDismissed.next({ dismissedByAction: this._dismissedByAction });\n    this._afterDismissed.complete();\n    this._dismissedByAction = false;\n  }\n\n  /** Gets an observable that is notified when the toast is finished closing. */\n  afterDismissed(): Observable<ToastDismiss> {\n    return this._afterDismissed;\n  }\n\n  /** Gets an observable that is notified when the toast has opened and appeared. */\n  afterOpened(): Observable<void> {\n    return this.containerInstance._onEnter;\n  }\n\n  /** Gets an observable that is notified when the toast action is called. */\n  onAction(): Observable<void> {\n    return this._onAction;\n  }\n}\n","import { ViewContainerRef, InjectionToken } from '@angular/core';\nimport { Direction } from '@angular/cdk/bidi';\n\nexport const TOAST_DATA = new InjectionToken<any>('ToastData');\n\nexport type ToastType = 'success' | 'error' | 'info' | 'warning';\n\nexport type ToastHorizontalPosition = 'start' | 'center' | 'end' | 'left' | 'right';\n\nexport type ToastVerticalPosition = 'top' | 'bottom';\n\nexport class ToastConfig<D = any> {\n  /**\n   * The view container that serves as the parent for the toast for the purposes of dependency\n   * injection. Note: this does not affect where the toast is inserted in the DOM.\n   */\n  viewContainerRef?: ViewContainerRef;\n\n  /** The length of time in milliseconds to wait before automatically dismissing the toast. */\n  duration?: number = 5000;\n\n  /** Text layout direction for the toast. */\n  direction?: Direction;\n\n  /** Data being injected into the child component. */\n  data?: D | null = null;\n\n  /** The horizontal position to place the toast. */\n  horizontalPosition?: ToastHorizontalPosition = 'center';\n\n  /** The vertical position to place the toast. */\n  verticalPosition?: ToastVerticalPosition = 'top';\n}\n","import { Component, inject } from '@angular/core';\nimport { NgClass } from '@angular/common';\n\nimport { ToastRef } from './toast.ref';\nimport { TOAST_DATA, ToastType } from './toast.config';\n\n@Component({\n  selector: 'toast',\n  standalone: true,\n  imports: [NgClass],\n  templateUrl: './toast.component.html',\n})\nexport class ToastComponent {\n  public data = inject<{\n    title: string;\n    message: string;\n    type: ToastType;\n  }>(TOAST_DATA);\n\n  public toastRef = inject(ToastRef<ToastComponent>);\n\n  action(): void {\n    this.toastRef.dismissWithAction();\n  }\n\n  dismiss(): void {\n    this.toastRef.dismiss();\n  }\n}\n","<div\n  role=\"alert\"\n  class=\"relative px-4 py-3 border-0 border-l-4 shadow-lg alert bg-base-100 min-w-60\"\n  [ngClass]=\"{\n    'border-info': data.type === 'info',\n    'border-success': data.type === 'success',\n    'border-warning': data.type === 'warning',\n    'border-error': data.type === 'error',\n  }\"\n>\n  <div class=\"flex items-start gap-4 mr-6\">\n    <!-- Icon -->\n    @switch (data.type) {\n      @case ('info') {\n        <span class=\"text-info\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            class=\"stroke-current w-7 h-7 shrink-0\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            />\n          </svg>\n        </span>\n      }\n      @case ('success') {\n        <span class=\"text-success\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            class=\"stroke-current w-7 h-7 shrink-0\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n            />\n          </svg>\n        </span>\n      }\n      @case ('warning') {\n        <span class=\"text-warning\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            class=\"stroke-current w-7 h-7 shrink-0\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n            />\n          </svg>\n        </span>\n      }\n      @case ('error') {\n        <span class=\"text-error\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            class=\"stroke-current w-7 h-7 shrink-0\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\n            />\n          </svg>\n        </span>\n      }\n    }\n\n    <!-- Message -->\n    <div class=\"flex-1\">\n      <strong\n        class=\"block font-medium\"\n        [innerHTML]=\"data.title\"\n      ></strong>\n      <p\n        class=\"mt-1\"\n        [innerHTML]=\"data.message\"\n      ></p>\n    </div>\n\n    <!-- Dismiss -->\n    <button\n      class=\"absolute transition btn btn-circle btn-ghost btn-sm top-1 right-1\"\n      (click)=\"dismiss()\"\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"1.5\"\n        stroke=\"currentColor\"\n        class=\"w-5 h-5 text-hint\"\n      >\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          d=\"M6 18L18 6M6 6l12 12\"\n        />\n      </svg>\n    </button>\n  </div>\n</div>\n","import {\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  EmbeddedViewRef,\n  NgZone,\n  OnDestroy,\n  ViewChild,\n} from '@angular/core';\n\nimport {\n  BasePortalOutlet,\n  CdkPortalOutlet,\n  ComponentPortal,\n  DomPortal,\n  TemplatePortal,\n} from '@angular/cdk/portal';\n\nimport { AnimationEvent } from '@angular/animations';\nimport { Observable, Subject } from 'rxjs';\n\nimport { toastAnimations } from './toast.animation';\n\n@Component({\n  standalone: true,\n  selector: 'toast-container',\n  template: '<ng-template cdkPortalOutlet />',\n  animations: [toastAnimations.toastState],\n  imports: [CdkPortalOutlet],\n  host: {\n    class: 'm-4 flex flex-col',\n    '[@state]': '_animationState',\n    '(@state.done)': 'onAnimationEnd($event)',\n  },\n})\nexport class ToastContainerComponent extends BasePortalOutlet implements OnDestroy {\n  /** Whether the component has been destroyed. */\n  private _destroyed = false;\n\n  /** The portal outlet inside of this container into which the toast content will be loaded. */\n  @ViewChild(CdkPortalOutlet, { static: true }) _portalOutlet: CdkPortalOutlet;\n\n  /** Subject for notifying that the toast has exited from view. */\n  readonly _onExit = new Subject<void>();\n\n  /** Subject for notifying that the toast has finished entering the view. */\n  readonly _onEnter = new Subject<void>();\n\n  /** The state of the toast animations. */\n  _animationState = 'void';\n\n  constructor(\n    private _ngZone: NgZone,\n    private _changeDetectorRef: ChangeDetectorRef\n  ) {\n    super();\n  }\n\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    const result = this._portalOutlet.attachComponentPortal(portal);\n    return result;\n  }\n\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n    const result = this._portalOutlet.attachTemplatePortal(portal);\n    return result;\n  }\n\n  override attachDomPortal = (portal: DomPortal) => {\n    const result = this._portalOutlet.attachDomPortal(portal);\n    return result;\n  };\n\n  onAnimationEnd(event: AnimationEvent) {\n    const { fromState, toState } = event;\n\n    if ((toState === 'void' && fromState !== 'void') || toState === 'hidden') {\n      this._completeExit();\n    }\n\n    if (toState === 'visible') {\n      const onEnter = this._onEnter;\n\n      this._ngZone.run(() => {\n        onEnter.next();\n        onEnter.complete();\n      });\n    }\n  }\n\n  enter(): void {\n    if (!this._destroyed) {\n      this._animationState = 'visible';\n      this._changeDetectorRef.markForCheck();\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n\n  exit(): Observable<void> {\n    this._ngZone.run(() => {\n      this._animationState = 'hidden';\n      this._changeDetectorRef.markForCheck();\n    });\n\n    return this._onExit;\n  }\n\n  ngOnDestroy() {\n    this._destroyed = true;\n    this._completeExit();\n  }\n\n  private _completeExit() {\n    queueMicrotask(() => {\n      this._onExit.next();\n      this._onExit.complete();\n    });\n  }\n}\n","import { ComponentType, Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal, TemplatePortal } from '@angular/cdk/portal';\n\nimport {\n  ComponentRef,\n  EmbeddedViewRef,\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  OnDestroy,\n  Optional,\n  SkipSelf,\n  TemplateRef,\n} from '@angular/core';\n\nimport { TOAST_DATA, ToastConfig, ToastType } from './toast.config';\nimport { ToastContainerComponent } from './toast.container';\nimport { ToastComponent } from './toast.component';\nimport { ToastRef } from './toast.ref';\n\nexport function TOAST_DEFAULT_OPTIONS_FACTORY(): ToastConfig {\n  return new ToastConfig();\n}\n\nexport const TOAST_DEFAULT_OPTIONS = new InjectionToken<ToastConfig>('toast-default-options', {\n  providedIn: 'root',\n  factory: TOAST_DEFAULT_OPTIONS_FACTORY,\n});\n\n@Injectable({ providedIn: 'root' })\nexport class ToastService implements OnDestroy {\n  private _toastRefAtThisLevel: ToastRef<any> | null = null;\n\n  toastComponent = ToastComponent;\n  toastContainerComponent = ToastContainerComponent;\n\n  get _openedToastRef(): ToastRef<any> | null {\n    const parent = this._parentToast;\n    return parent ? parent._openedToastRef : this._toastRefAtThisLevel;\n  }\n\n  set _openedToastRef(value: ToastRef<any> | null) {\n    if (this._parentToast) {\n      this._parentToast._openedToastRef = value;\n    } else {\n      this._toastRefAtThisLevel = value;\n    }\n  }\n\n  constructor(\n    private _overlay: Overlay,\n    private _injector: Injector,\n    @Optional() @SkipSelf() private _parentToast: ToastService,\n    @Inject(TOAST_DEFAULT_OPTIONS) private _defaultConfig: ToastConfig\n  ) {}\n\n  open(\n    type: ToastType,\n    title: string,\n    message: string,\n    config?: ToastConfig\n  ): ToastRef<ToastComponent> {\n    const _config = {\n      ...this._defaultConfig,\n      ...config,\n      data: { title, message, type },\n    };\n\n    return this._attach(this.toastComponent, _config) as ToastRef<ToastComponent>;\n  }\n\n  info(message: string, title = ''): ToastRef<ToastComponent> {\n    return this.open('info', title, message);\n  }\n\n  success(message: string, title = ''): ToastRef<ToastComponent> {\n    return this.open('success', title, message);\n  }\n\n  warning(message: string, title = ''): ToastRef<ToastComponent> {\n    return this.open('warning', title, message);\n  }\n\n  error(message: string, title = ''): ToastRef<ToastComponent> {\n    return this.open('error', title, message);\n  }\n\n  dismiss(): void {\n    if (this._openedToastRef) {\n      this._openedToastRef.dismiss();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._toastRefAtThisLevel) {\n      this._toastRefAtThisLevel.dismiss();\n    }\n  }\n\n  private _attachToastContainer(\n    overlayRef: OverlayRef,\n    config: ToastConfig\n  ): ToastContainerComponent {\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n    const injector = Injector.create({\n      parent: userInjector || this._injector,\n      providers: [{ provide: ToastConfig, useValue: config }],\n    });\n\n    const containerPortal = new ComponentPortal(\n      this.toastContainerComponent,\n      config.viewContainerRef,\n      injector\n    );\n    const containerRef: ComponentRef<ToastContainerComponent> = overlayRef.attach(containerPortal);\n    return containerRef.instance;\n  }\n\n  private _attach<T>(\n    content: ComponentType<T> | TemplateRef<T>,\n    userConfig?: ToastConfig\n  ): ToastRef<T | EmbeddedViewRef<any>> {\n    const config = { ...new ToastConfig(), ...this._defaultConfig, ...userConfig };\n    const overlayRef = this._createOverlay(config);\n    const container = this._attachToastContainer(overlayRef, config);\n    const toastRef = new ToastRef<T | EmbeddedViewRef<any>>(container, overlayRef);\n\n    if (content instanceof TemplateRef) {\n      const portal = new TemplatePortal(content, null!, {\n        $implicit: config.data,\n        toastRef,\n      } as any);\n\n      toastRef.instance = container.attachTemplatePortal(portal);\n    } else {\n      const injector = this._createInjector(config, toastRef);\n      const portal = new ComponentPortal(content, undefined, injector);\n      const contentRef = container.attachComponentPortal<T>(portal);\n\n      // We can't pass this via the injector, because the injector is created earlier.\n      toastRef.instance = contentRef.instance;\n    }\n\n    this._animateToast(toastRef, config);\n    this._openedToastRef = toastRef;\n    return this._openedToastRef;\n  }\n\n  private _animateToast(toastRef: ToastRef<any>, config: ToastConfig) {\n    // When the toast is dismissed, clear the reference to it.\n    toastRef.afterDismissed().subscribe(() => {\n      // Clear the toast ref if it hasn't already been replaced by a newer toast.\n      if (this._openedToastRef == toastRef) {\n        this._openedToastRef = null;\n      }\n    });\n\n    if (this._openedToastRef) {\n      // If a toast is already in view, dismiss it and enter the\n      // new toast after exit animation is complete.\n      this._openedToastRef.afterDismissed().subscribe(() => {\n        toastRef.containerInstance.enter();\n      });\n      this._openedToastRef.dismiss();\n    } else {\n      // If no toast is in view, enter the new toast.\n      toastRef.containerInstance.enter();\n    }\n\n    // If a dismiss timeout is provided, set up dismiss based on after the toast is opened.\n    if (config.duration && config.duration > 0) {\n      toastRef.afterOpened().subscribe(() => toastRef._dismissAfter(config.duration!));\n    }\n  }\n\n  /**\n   * Creates a new overlay and places it in the correct location.\n   * @param config The user-specified toast config.\n   */\n  private _createOverlay(config: ToastConfig): OverlayRef {\n    const overlayConfig = new OverlayConfig();\n    overlayConfig.direction = config.direction;\n\n    const positionStrategy = this._overlay.position().global();\n    // Set horizontal position.\n    const isRtl = config.direction === 'rtl';\n    const isLeft =\n      config.horizontalPosition === 'left' ||\n      (config.horizontalPosition === 'start' && !isRtl) ||\n      (config.horizontalPosition === 'end' && isRtl);\n    const isRight = !isLeft && config.horizontalPosition !== 'center';\n    if (isLeft) {\n      positionStrategy.left('0');\n    } else if (isRight) {\n      positionStrategy.right('0');\n    } else {\n      positionStrategy.centerHorizontally();\n    }\n    // Set horizontal position.\n    if (config.verticalPosition === 'top') {\n      positionStrategy.top('0');\n    } else {\n      positionStrategy.bottom('0');\n    }\n\n    overlayConfig.positionStrategy = positionStrategy;\n    return this._overlay.create(overlayConfig);\n  }\n\n  private _createInjector<T>(config: ToastConfig, toastRef: ToastRef<T>): Injector {\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n\n    return Injector.create({\n      parent: userInjector || this._injector,\n      providers: [\n        { provide: ToastRef, useValue: toastRef },\n        { provide: TOAST_DATA, useValue: config.data },\n      ],\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { ToastComponent } from './toast.component';\nimport { ToastService } from './toast.service';\nimport { ToastContainerComponent } from './toast.container';\n\n@NgModule({\n  imports: [OverlayModule, PortalModule, ToastContainerComponent, ToastComponent],\n  exports: [ToastContainerComponent, ToastComponent],\n  providers: [ToastService],\n})\nexport class ToastModule {}\n","import { ENVIRONMENT_INITIALIZER, EnvironmentProviders, inject, Provider } from '@angular/core';\n\nimport { ToastService } from './toast.service';\n\nexport const provideToast = (): (Provider | EnvironmentProviders)[] => {\n  return [\n    {\n      provide: ENVIRONMENT_INITIALIZER,\n      useValue: () => inject(ToastService),\n      multi: true,\n    },\n  ];\n};\n","/*\n * Public API Surface of toast\n */\n\nexport * from './lib/toast.animation';\nexport * from './lib/toast.component';\nexport * from './lib/toast.config';\nexport * from './lib/toast.container';\nexport * from './lib/toast.interface';\nexport * from './lib/toast.module';\nexport * from './lib/toast.provider';\nexport * from './lib/toast.ref';\nexport * from './lib/toast.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}