import { ChangeDetectionStrategy, Component, forwardRef, Input } from '@angular/core';
import { NgClass, NgFor, NgIf, NgTemplateOutlet } from '@angular/common';
import { SvgIconModule } from '@libs/svg-icon';
import { Subject, takeUntil } from 'rxjs';
import { HorizontalNavigationBasicItemComponent } from '../../components/basic/basic.component';
import { HorizontalNavigationDividerItemComponent } from '../../../horizontal/components/divider/divider.component';
import * as i0 from "@angular/core";
import * as i1 from "../../../navigation.service";
import * as i2 from "@libs/svg-icon";
export class HorizontalNavigationBranchItemComponent {
    _changeDetectorRef;
    _navigationService;
    static ngAcceptInputType_child;
    child = false;
    item;
    name;
    _horizontalNavigationComponent;
    _unsubscribeAll = new Subject();
    constructor(_changeDetectorRef, _navigationService) {
        this._changeDetectorRef = _changeDetectorRef;
        this._navigationService = _navigationService;
    }
    // -----------------------------------------------------------------------------------------------------
    // @ Lifecycle hooks
    // -----------------------------------------------------------------------------------------------------
    ngOnInit() {
        // Get the parent navigation component
        this._horizontalNavigationComponent = this._navigationService.getComponent(this.name);
        // Subscribe to onRefreshed on the navigation component
        this._horizontalNavigationComponent.onRefreshed.pipe(takeUntil(this._unsubscribeAll)).subscribe(() => {
            // Mark for check
            this._changeDetectorRef.markForCheck();
        });
    }
    ngOnDestroy() {
        this._unsubscribeAll.next(null);
        this._unsubscribeAll.complete();
    }
    // -----------------------------------------------------------------------------------------------------
    // @ Public methods
    // -----------------------------------------------------------------------------------------------------
    triggerChangeDetection() {
        // Mark for check
        this._changeDetectorRef.markForCheck();
    }
    trackByFn(index, item) {
        return item.id || index;
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.8", ngImport: i0, type: HorizontalNavigationBranchItemComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.NavigationService }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.8", type: HorizontalNavigationBranchItemComponent, isStandalone: true, selector: "horizontal-navigation-branch-item", inputs: { child: "child", item: "item", name: "name" }, ngImport: i0, template: "@if (!child) {\n  <div class=\"dropdown dropdown-bottom\">\n    <div\n      tabindex=\"0\"\n      [ngClass]=\"{\n        'horizontal-navigation-menu-active-forced': item.active,\n      }\"\n    >\n      <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: item }\" />\n    </div>\n\n    <div\n      tabindex=\"0\"\n      class=\"dropdown-content z-[1] menu p-2 shadow bg-base-100 rounded-box min-w-52\"\n    >\n      @for (item of item.children; track item.id) {\n        <!-- Skip the hidden items -->\n        @if ((item.hidden && !item.hidden(item)) || !item.hidden) {\n          <!-- Basic -->\n          @if (item.type === 'basic') {\n            <div\n              class=\"horizontal-navigation-menu-item\"\n              mat-menu-item\n            >\n              <horizontal-navigation-basic-item\n                [item]=\"item\"\n                [name]=\"name\"\n              />\n            </div>\n          }\n\n          <!-- Branch: aside, collapsable, group -->\n          <!-- @if (item.type === 'aside' || item.type === 'collapsable' || item.type === 'group') {\n            <div\n              class=\"horizontal-navigation-menu-item\"\n              [disabled]=\"item.disabled\"\n              [matMenuTriggerFor]=\"branch.matMenu\"\n              mat-menu-item>\n              <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: item}\">}\n              <horizontal-navigation-branch-item\n                [child]=\"true\"\n                [item]=\"item\"\n                [name]=\"name\"\n                #branch></horizontal-navigation-branch-item>\n            </div>\n          } -->\n\n          <!-- Divider -->\n          @if (item.type === 'divider') {\n            <div\n              class=\"horizontal-navigation-menu-item\"\n              mat-menu-item\n            >\n              <horizontal-navigation-divider-item\n                [item]=\"item\"\n                [name]=\"name\"\n              />\n            </div>\n          }\n        }\n      }\n    </div>\n  </div>\n}\n\n<!-- Item template -->\n<ng-template\n  #itemTemplate\n  let-item\n>\n  <div\n    class=\"horizontal-navigation-item-wrapper\"\n    [class.horizontal-navigation-item-has-subtitle]=\"!!item.subtitle\"\n    [ngClass]=\"item.classes?.wrapper\"\n  >\n    <div\n      class=\"horizontal-navigation-item\"\n      [ngClass]=\"{\n        'horizontal-navigation-item-disabled': item.disabled,\n        'horizontal-navigation-item-active-forced': item.active,\n      }\"\n    >\n      <!-- Icon -->\n      @if (item.icon) {\n        <svg-icon\n          class=\"horizontal-navigation-item-icon\"\n          [ngClass]=\"item.classes?.icon\"\n          [name]=\"item.icon\"\n        />\n      }\n\n      <!-- Title & Subtitle -->\n      <div class=\"horizontal-navigation-item-title-wrapper\">\n        <div class=\"horizontal-navigation-item-title\">\n          <span [ngClass]=\"item.classes?.title\">\n            {{ item.title }}\n          </span>\n        </div>\n        @if (item.subtitle) {\n          <div class=\"horizontal-navigation-item-subtitle text-hint\">\n            <span [ngClass]=\"item.classes?.subtitle\">\n              {{ item.subtitle }}\n            </span>\n          </div>\n        }\n      </div>\n\n      <!-- Badge -->\n      @if (item.badge) {\n        <div class=\"horizontal-navigation-item-badge\">\n          <div\n            class=\"horizontal-navigation-item-badge-content\"\n            [ngClass]=\"item.badge.classes\"\n          >\n            {{ item.badge.title }}\n          </div>\n        </div>\n      }\n    </div>\n  </div>\n</ng-template>\n", dependencies: [{ kind: "directive", type: i0.forwardRef(() => NgClass), selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i0.forwardRef(() => NgTemplateOutlet), selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "ngmodule", type: i0.forwardRef(() => SvgIconModule) }, { kind: "component", type: i0.forwardRef(() => i2.SvgIcon), selector: "svg-icon", inputs: ["inline", "name", "fontSet", "fontIcon"], exportAs: ["svgIcon"] }, { kind: "component", type: i0.forwardRef(() => HorizontalNavigationBasicItemComponent), selector: "horizontal-navigation-basic-item", inputs: ["item", "name"] }, { kind: "component", type: i0.forwardRef(() => HorizontalNavigationDividerItemComponent), selector: "horizontal-navigation-divider-item", inputs: ["item", "name"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.8", ngImport: i0, type: HorizontalNavigationBranchItemComponent, decorators: [{
            type: Component,
            args: [{ selector: 'horizontal-navigation-branch-item', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [
                        NgIf, NgClass, NgTemplateOutlet, NgFor,
                        SvgIconModule,
                        HorizontalNavigationBasicItemComponent,
                        HorizontalNavigationDividerItemComponent,
                        forwardRef(() => HorizontalNavigationBranchItemComponent),
                    ], template: "@if (!child) {\n  <div class=\"dropdown dropdown-bottom\">\n    <div\n      tabindex=\"0\"\n      [ngClass]=\"{\n        'horizontal-navigation-menu-active-forced': item.active,\n      }\"\n    >\n      <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: item }\" />\n    </div>\n\n    <div\n      tabindex=\"0\"\n      class=\"dropdown-content z-[1] menu p-2 shadow bg-base-100 rounded-box min-w-52\"\n    >\n      @for (item of item.children; track item.id) {\n        <!-- Skip the hidden items -->\n        @if ((item.hidden && !item.hidden(item)) || !item.hidden) {\n          <!-- Basic -->\n          @if (item.type === 'basic') {\n            <div\n              class=\"horizontal-navigation-menu-item\"\n              mat-menu-item\n            >\n              <horizontal-navigation-basic-item\n                [item]=\"item\"\n                [name]=\"name\"\n              />\n            </div>\n          }\n\n          <!-- Branch: aside, collapsable, group -->\n          <!-- @if (item.type === 'aside' || item.type === 'collapsable' || item.type === 'group') {\n            <div\n              class=\"horizontal-navigation-menu-item\"\n              [disabled]=\"item.disabled\"\n              [matMenuTriggerFor]=\"branch.matMenu\"\n              mat-menu-item>\n              <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: item}\">}\n              <horizontal-navigation-branch-item\n                [child]=\"true\"\n                [item]=\"item\"\n                [name]=\"name\"\n                #branch></horizontal-navigation-branch-item>\n            </div>\n          } -->\n\n          <!-- Divider -->\n          @if (item.type === 'divider') {\n            <div\n              class=\"horizontal-navigation-menu-item\"\n              mat-menu-item\n            >\n              <horizontal-navigation-divider-item\n                [item]=\"item\"\n                [name]=\"name\"\n              />\n            </div>\n          }\n        }\n      }\n    </div>\n  </div>\n}\n\n<!-- Item template -->\n<ng-template\n  #itemTemplate\n  let-item\n>\n  <div\n    class=\"horizontal-navigation-item-wrapper\"\n    [class.horizontal-navigation-item-has-subtitle]=\"!!item.subtitle\"\n    [ngClass]=\"item.classes?.wrapper\"\n  >\n    <div\n      class=\"horizontal-navigation-item\"\n      [ngClass]=\"{\n        'horizontal-navigation-item-disabled': item.disabled,\n        'horizontal-navigation-item-active-forced': item.active,\n      }\"\n    >\n      <!-- Icon -->\n      @if (item.icon) {\n        <svg-icon\n          class=\"horizontal-navigation-item-icon\"\n          [ngClass]=\"item.classes?.icon\"\n          [name]=\"item.icon\"\n        />\n      }\n\n      <!-- Title & Subtitle -->\n      <div class=\"horizontal-navigation-item-title-wrapper\">\n        <div class=\"horizontal-navigation-item-title\">\n          <span [ngClass]=\"item.classes?.title\">\n            {{ item.title }}\n          </span>\n        </div>\n        @if (item.subtitle) {\n          <div class=\"horizontal-navigation-item-subtitle text-hint\">\n            <span [ngClass]=\"item.classes?.subtitle\">\n              {{ item.subtitle }}\n            </span>\n          </div>\n        }\n      </div>\n\n      <!-- Badge -->\n      @if (item.badge) {\n        <div class=\"horizontal-navigation-item-badge\">\n          <div\n            class=\"horizontal-navigation-item-badge-content\"\n            [ngClass]=\"item.badge.classes\"\n          >\n            {{ item.badge.title }}\n          </div>\n        </div>\n      }\n    </div>\n  </div>\n</ng-template>\n" }]
        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.NavigationService }], propDecorators: { child: [{
                type: Input
            }], item: [{
                type: Input
            }], name: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJhbmNoLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvaG9yaXpvbnRhbC9jb21wb25lbnRzL2JyYW5jaC9icmFuY2guY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9ob3Jpem9udGFsL2NvbXBvbmVudHMvYnJhbmNoL2JyYW5jaC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQXFCLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFnQyxNQUFNLGVBQWUsQ0FBQztBQUN2SSxPQUFPLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUV6RSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFL0MsT0FBTyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFJMUMsT0FBTyxFQUFFLHNDQUFzQyxFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDaEcsT0FBTyxFQUFFLHdDQUF3QyxFQUFFLE1BQU0sMERBQTBELENBQUM7Ozs7QUFpQnBILE1BQU0sT0FBTyx1Q0FBdUM7SUFZeEM7SUFDQTtJQVhWLE1BQU0sQ0FBQyx1QkFBdUIsQ0FBZTtJQUVwQyxLQUFLLEdBQVksS0FBSyxDQUFDO0lBQ3ZCLElBQUksQ0FBaUI7SUFDckIsSUFBSSxDQUFTO0lBRWQsOEJBQThCLENBQWdDO0lBQzlELGVBQWUsR0FBaUIsSUFBSSxPQUFPLEVBQU8sQ0FBQztJQUUzRCxZQUNVLGtCQUFxQyxFQUNyQyxrQkFBcUM7UUFEckMsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFtQjtRQUNyQyx1QkFBa0IsR0FBbEIsa0JBQWtCLENBQW1CO0lBQzVDLENBQUM7SUFFSix3R0FBd0c7SUFDeEcsb0JBQW9CO0lBQ3BCLHdHQUF3RztJQUV4RyxRQUFRO1FBQ04sc0NBQXNDO1FBQ3RDLElBQUksQ0FBQyw4QkFBOEIsR0FBRyxJQUFJLENBQUMsa0JBQWtCLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUV0Rix1REFBdUQ7UUFDdkQsSUFBSSxDQUFDLDhCQUE4QixDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQ2xELFNBQVMsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQ2hDLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRTtZQUNmLGlCQUFpQjtZQUNqQixJQUFJLENBQUMsa0JBQWtCLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDekMsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2hDLElBQUksQ0FBQyxlQUFlLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDbEMsQ0FBQztJQUVELHdHQUF3RztJQUN4RyxtQkFBbUI7SUFDbkIsd0dBQXdHO0lBRXhHLHNCQUFzQjtRQUNwQixpQkFBaUI7UUFDakIsSUFBSSxDQUFDLGtCQUFrQixDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3pDLENBQUM7SUFFRCxTQUFTLENBQUMsS0FBYSxFQUFFLElBQVM7UUFDaEMsT0FBTyxJQUFJLENBQUMsRUFBRSxJQUFJLEtBQUssQ0FBQztJQUMxQixDQUFDO3VHQWpEVSx1Q0FBdUM7MkZBQXZDLHVDQUF1QyxxSkMzQnBELHFqSEF5SEEsZ0VEckdVLE9BQU8seUdBQUUsZ0JBQWdCLHdLQUMvQixhQUFhLGtOQUNiLHNDQUFzQyw0SEFDdEMsd0NBQXdDOzsyRkFJL0IsdUNBQXVDO2tCQWJuRCxTQUFTOytCQUNFLG1DQUFtQyxtQkFFNUIsdUJBQXVCLENBQUMsTUFBTSxjQUNuQyxJQUFJLFdBQ1A7d0JBQ1AsSUFBSSxFQUFFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxLQUFLO3dCQUN0QyxhQUFhO3dCQUNiLHNDQUFzQzt3QkFDdEMsd0NBQXdDO3dCQUN4QyxVQUFVLENBQUMsR0FBRyxFQUFFLHdDQUF3QyxDQUFDO3FCQUMxRDtzSEFNUSxLQUFLO3NCQUFiLEtBQUs7Z0JBQ0csSUFBSTtzQkFBWixLQUFLO2dCQUNHLElBQUk7c0JBQVosS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDaGFuZ2VEZXRlY3RvclJlZiwgQ29tcG9uZW50LCBmb3J3YXJkUmVmLCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdDbGFzcywgTmdGb3IsIE5nSWYsIE5nVGVtcGxhdGVPdXRsZXQgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgQm9vbGVhbklucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2NvZXJjaW9uJztcbmltcG9ydCB7IFN2Z0ljb25Nb2R1bGUgfSBmcm9tICdAbGlicy9zdmctaWNvbic7XG5cbmltcG9ydCB7IFN1YmplY3QsIHRha2VVbnRpbCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgTmF2aWdhdGlvblNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi9uYXZpZ2F0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgTmF2aWdhdGlvbkl0ZW0gfSBmcm9tICcuLi8uLi8uLi9uYXZpZ2F0aW9uLnR5cGVzJztcblxuaW1wb3J0IHsgSG9yaXpvbnRhbE5hdmlnYXRpb25CYXNpY0l0ZW1Db21wb25lbnQgfSBmcm9tICcuLi8uLi9jb21wb25lbnRzL2Jhc2ljL2Jhc2ljLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBIb3Jpem9udGFsTmF2aWdhdGlvbkRpdmlkZXJJdGVtQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vLi4vaG9yaXpvbnRhbC9jb21wb25lbnRzL2RpdmlkZXIvZGl2aWRlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgSG9yaXpvbnRhbE5hdmlnYXRpb25Db21wb25lbnQgfSBmcm9tICcuLi8uLi8uLi9ob3Jpem9udGFsL2hvcml6b250YWwuY29tcG9uZW50JztcblxuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdob3Jpem9udGFsLW5hdmlnYXRpb24tYnJhbmNoLWl0ZW0nLFxuICB0ZW1wbGF0ZVVybDogJy4vYnJhbmNoLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGltcG9ydHM6IFtcbiAgICBOZ0lmLCBOZ0NsYXNzLCBOZ1RlbXBsYXRlT3V0bGV0LCBOZ0ZvcixcbiAgICBTdmdJY29uTW9kdWxlLFxuICAgIEhvcml6b250YWxOYXZpZ2F0aW9uQmFzaWNJdGVtQ29tcG9uZW50LFxuICAgIEhvcml6b250YWxOYXZpZ2F0aW9uRGl2aWRlckl0ZW1Db21wb25lbnQsXG4gICAgZm9yd2FyZFJlZigoKSA9PiBIb3Jpem9udGFsTmF2aWdhdGlvbkJyYW5jaEl0ZW1Db21wb25lbnQpLFxuICBdLFxufSlcbmV4cG9ydCBjbGFzcyBIb3Jpem9udGFsTmF2aWdhdGlvbkJyYW5jaEl0ZW1Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG5cbiAgc3RhdGljIG5nQWNjZXB0SW5wdXRUeXBlX2NoaWxkOiBCb29sZWFuSW5wdXQ7XG5cbiAgQElucHV0KCkgY2hpbGQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgQElucHV0KCkgaXRlbTogTmF2aWdhdGlvbkl0ZW07XG4gIEBJbnB1dCgpIG5hbWU6IHN0cmluZztcblxuICBwcml2YXRlIF9ob3Jpem9udGFsTmF2aWdhdGlvbkNvbXBvbmVudDogSG9yaXpvbnRhbE5hdmlnYXRpb25Db21wb25lbnQ7XG4gIHByaXZhdGUgX3Vuc3Vic2NyaWJlQWxsOiBTdWJqZWN0PGFueT4gPSBuZXcgU3ViamVjdDxhbnk+KCk7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBfY2hhbmdlRGV0ZWN0b3JSZWY6IENoYW5nZURldGVjdG9yUmVmLFxuICAgIHByaXZhdGUgX25hdmlnYXRpb25TZXJ2aWNlOiBOYXZpZ2F0aW9uU2VydmljZSxcbiAgKSB7fVxuXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIEAgTGlmZWN5Y2xlIGhvb2tzXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgLy8gR2V0IHRoZSBwYXJlbnQgbmF2aWdhdGlvbiBjb21wb25lbnRcbiAgICB0aGlzLl9ob3Jpem9udGFsTmF2aWdhdGlvbkNvbXBvbmVudCA9IHRoaXMuX25hdmlnYXRpb25TZXJ2aWNlLmdldENvbXBvbmVudCh0aGlzLm5hbWUpO1xuXG4gICAgLy8gU3Vic2NyaWJlIHRvIG9uUmVmcmVzaGVkIG9uIHRoZSBuYXZpZ2F0aW9uIGNvbXBvbmVudFxuICAgIHRoaXMuX2hvcml6b250YWxOYXZpZ2F0aW9uQ29tcG9uZW50Lm9uUmVmcmVzaGVkLnBpcGUoXG4gICAgICB0YWtlVW50aWwodGhpcy5fdW5zdWJzY3JpYmVBbGwpLFxuICAgICkuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgIC8vIE1hcmsgZm9yIGNoZWNrXG4gICAgICB0aGlzLl9jaGFuZ2VEZXRlY3RvclJlZi5tYXJrRm9yQ2hlY2soKTtcbiAgICB9KTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCk6IHZvaWQge1xuICAgIHRoaXMuX3Vuc3Vic2NyaWJlQWxsLm5leHQobnVsbCk7XG4gICAgdGhpcy5fdW5zdWJzY3JpYmVBbGwuY29tcGxldGUoKTtcbiAgfVxuXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIEAgUHVibGljIG1ldGhvZHNcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICB0cmlnZ2VyQ2hhbmdlRGV0ZWN0aW9uKCk6IHZvaWQge1xuICAgIC8vIE1hcmsgZm9yIGNoZWNrXG4gICAgdGhpcy5fY2hhbmdlRGV0ZWN0b3JSZWYubWFya0ZvckNoZWNrKCk7XG4gIH1cblxuICB0cmFja0J5Rm4oaW5kZXg6IG51bWJlciwgaXRlbTogYW55KTogYW55IHtcbiAgICByZXR1cm4gaXRlbS5pZCB8fCBpbmRleDtcbiAgfVxuXG59XG4iLCJAaWYgKCFjaGlsZCkge1xuICA8ZGl2IGNsYXNzPVwiZHJvcGRvd24gZHJvcGRvd24tYm90dG9tXCI+XG4gICAgPGRpdlxuICAgICAgdGFiaW5kZXg9XCIwXCJcbiAgICAgIFtuZ0NsYXNzXT1cIntcbiAgICAgICAgJ2hvcml6b250YWwtbmF2aWdhdGlvbi1tZW51LWFjdGl2ZS1mb3JjZWQnOiBpdGVtLmFjdGl2ZSxcbiAgICAgIH1cIlxuICAgID5cbiAgICAgIDxuZy1jb250YWluZXIgKm5nVGVtcGxhdGVPdXRsZXQ9XCJpdGVtVGVtcGxhdGU7IGNvbnRleHQ6IHsgJGltcGxpY2l0OiBpdGVtIH1cIiAvPlxuICAgIDwvZGl2PlxuXG4gICAgPGRpdlxuICAgICAgdGFiaW5kZXg9XCIwXCJcbiAgICAgIGNsYXNzPVwiZHJvcGRvd24tY29udGVudCB6LVsxXSBtZW51IHAtMiBzaGFkb3cgYmctYmFzZS0xMDAgcm91bmRlZC1ib3ggbWluLXctNTJcIlxuICAgID5cbiAgICAgIEBmb3IgKGl0ZW0gb2YgaXRlbS5jaGlsZHJlbjsgdHJhY2sgaXRlbS5pZCkge1xuICAgICAgICA8IS0tIFNraXAgdGhlIGhpZGRlbiBpdGVtcyAtLT5cbiAgICAgICAgQGlmICgoaXRlbS5oaWRkZW4gJiYgIWl0ZW0uaGlkZGVuKGl0ZW0pKSB8fCAhaXRlbS5oaWRkZW4pIHtcbiAgICAgICAgICA8IS0tIEJhc2ljIC0tPlxuICAgICAgICAgIEBpZiAoaXRlbS50eXBlID09PSAnYmFzaWMnKSB7XG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgIGNsYXNzPVwiaG9yaXpvbnRhbC1uYXZpZ2F0aW9uLW1lbnUtaXRlbVwiXG4gICAgICAgICAgICAgIG1hdC1tZW51LWl0ZW1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPGhvcml6b250YWwtbmF2aWdhdGlvbi1iYXNpYy1pdGVtXG4gICAgICAgICAgICAgICAgW2l0ZW1dPVwiaXRlbVwiXG4gICAgICAgICAgICAgICAgW25hbWVdPVwibmFtZVwiXG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICB9XG5cbiAgICAgICAgICA8IS0tIEJyYW5jaDogYXNpZGUsIGNvbGxhcHNhYmxlLCBncm91cCAtLT5cbiAgICAgICAgICA8IS0tIEBpZiAoaXRlbS50eXBlID09PSAnYXNpZGUnIHx8IGl0ZW0udHlwZSA9PT0gJ2NvbGxhcHNhYmxlJyB8fCBpdGVtLnR5cGUgPT09ICdncm91cCcpIHtcbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgY2xhc3M9XCJob3Jpem9udGFsLW5hdmlnYXRpb24tbWVudS1pdGVtXCJcbiAgICAgICAgICAgICAgW2Rpc2FibGVkXT1cIml0ZW0uZGlzYWJsZWRcIlxuICAgICAgICAgICAgICBbbWF0TWVudVRyaWdnZXJGb3JdPVwiYnJhbmNoLm1hdE1lbnVcIlxuICAgICAgICAgICAgICBtYXQtbWVudS1pdGVtPlxuICAgICAgICAgICAgICA8bmctY29udGFpbmVyICpuZ1RlbXBsYXRlT3V0bGV0PVwiaXRlbVRlbXBsYXRlOyBjb250ZXh0OiB7JGltcGxpY2l0OiBpdGVtfVwiPn1cbiAgICAgICAgICAgICAgPGhvcml6b250YWwtbmF2aWdhdGlvbi1icmFuY2gtaXRlbVxuICAgICAgICAgICAgICAgIFtjaGlsZF09XCJ0cnVlXCJcbiAgICAgICAgICAgICAgICBbaXRlbV09XCJpdGVtXCJcbiAgICAgICAgICAgICAgICBbbmFtZV09XCJuYW1lXCJcbiAgICAgICAgICAgICAgICAjYnJhbmNoPjwvaG9yaXpvbnRhbC1uYXZpZ2F0aW9uLWJyYW5jaC1pdGVtPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgfSAtLT5cblxuICAgICAgICAgIDwhLS0gRGl2aWRlciAtLT5cbiAgICAgICAgICBAaWYgKGl0ZW0udHlwZSA9PT0gJ2RpdmlkZXInKSB7XG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgIGNsYXNzPVwiaG9yaXpvbnRhbC1uYXZpZ2F0aW9uLW1lbnUtaXRlbVwiXG4gICAgICAgICAgICAgIG1hdC1tZW51LWl0ZW1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPGhvcml6b250YWwtbmF2aWdhdGlvbi1kaXZpZGVyLWl0ZW1cbiAgICAgICAgICAgICAgICBbaXRlbV09XCJpdGVtXCJcbiAgICAgICAgICAgICAgICBbbmFtZV09XCJuYW1lXCJcbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbn1cblxuPCEtLSBJdGVtIHRlbXBsYXRlIC0tPlxuPG5nLXRlbXBsYXRlXG4gICNpdGVtVGVtcGxhdGVcbiAgbGV0LWl0ZW1cbj5cbiAgPGRpdlxuICAgIGNsYXNzPVwiaG9yaXpvbnRhbC1uYXZpZ2F0aW9uLWl0ZW0td3JhcHBlclwiXG4gICAgW2NsYXNzLmhvcml6b250YWwtbmF2aWdhdGlvbi1pdGVtLWhhcy1zdWJ0aXRsZV09XCIhIWl0ZW0uc3VidGl0bGVcIlxuICAgIFtuZ0NsYXNzXT1cIml0ZW0uY2xhc3Nlcz8ud3JhcHBlclwiXG4gID5cbiAgICA8ZGl2XG4gICAgICBjbGFzcz1cImhvcml6b250YWwtbmF2aWdhdGlvbi1pdGVtXCJcbiAgICAgIFtuZ0NsYXNzXT1cIntcbiAgICAgICAgJ2hvcml6b250YWwtbmF2aWdhdGlvbi1pdGVtLWRpc2FibGVkJzogaXRlbS5kaXNhYmxlZCxcbiAgICAgICAgJ2hvcml6b250YWwtbmF2aWdhdGlvbi1pdGVtLWFjdGl2ZS1mb3JjZWQnOiBpdGVtLmFjdGl2ZSxcbiAgICAgIH1cIlxuICAgID5cbiAgICAgIDwhLS0gSWNvbiAtLT5cbiAgICAgIEBpZiAoaXRlbS5pY29uKSB7XG4gICAgICAgIDxzdmctaWNvblxuICAgICAgICAgIGNsYXNzPVwiaG9yaXpvbnRhbC1uYXZpZ2F0aW9uLWl0ZW0taWNvblwiXG4gICAgICAgICAgW25nQ2xhc3NdPVwiaXRlbS5jbGFzc2VzPy5pY29uXCJcbiAgICAgICAgICBbbmFtZV09XCJpdGVtLmljb25cIlxuICAgICAgICAvPlxuICAgICAgfVxuXG4gICAgICA8IS0tIFRpdGxlICYgU3VidGl0bGUgLS0+XG4gICAgICA8ZGl2IGNsYXNzPVwiaG9yaXpvbnRhbC1uYXZpZ2F0aW9uLWl0ZW0tdGl0bGUtd3JhcHBlclwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiaG9yaXpvbnRhbC1uYXZpZ2F0aW9uLWl0ZW0tdGl0bGVcIj5cbiAgICAgICAgICA8c3BhbiBbbmdDbGFzc109XCJpdGVtLmNsYXNzZXM/LnRpdGxlXCI+XG4gICAgICAgICAgICB7eyBpdGVtLnRpdGxlIH19XG4gICAgICAgICAgPC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgQGlmIChpdGVtLnN1YnRpdGxlKSB7XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImhvcml6b250YWwtbmF2aWdhdGlvbi1pdGVtLXN1YnRpdGxlIHRleHQtaGludFwiPlxuICAgICAgICAgICAgPHNwYW4gW25nQ2xhc3NdPVwiaXRlbS5jbGFzc2VzPy5zdWJ0aXRsZVwiPlxuICAgICAgICAgICAgICB7eyBpdGVtLnN1YnRpdGxlIH19XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIH1cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8IS0tIEJhZGdlIC0tPlxuICAgICAgQGlmIChpdGVtLmJhZGdlKSB7XG4gICAgICAgIDxkaXYgY2xhc3M9XCJob3Jpem9udGFsLW5hdmlnYXRpb24taXRlbS1iYWRnZVwiPlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNsYXNzPVwiaG9yaXpvbnRhbC1uYXZpZ2F0aW9uLWl0ZW0tYmFkZ2UtY29udGVudFwiXG4gICAgICAgICAgICBbbmdDbGFzc109XCJpdGVtLmJhZGdlLmNsYXNzZXNcIlxuICAgICAgICAgID5cbiAgICAgICAgICAgIHt7IGl0ZW0uYmFkZ2UudGl0bGUgfX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICB9XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC9uZy10ZW1wbGF0ZT5cbiJdfQ==