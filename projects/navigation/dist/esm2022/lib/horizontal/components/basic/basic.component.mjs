import { ChangeDetectionStrategy, Component, Input, } from '@angular/core';
import { RouterLink, RouterLinkActive } from '@angular/router';
import { NgClass, NgTemplateOutlet } from '@angular/common';
import { SvgIconModule } from '@libs/svg-icon';
import { Subject, takeUntil } from 'rxjs';
import { UtilsHelper } from '../../../utils.helper';
import * as i0 from "@angular/core";
import * as i1 from "../../../navigation.service";
import * as i2 from "@libs/svg-icon";
export class HorizontalNavigationBasicItemComponent {
    _changeDetectorRef;
    _navigationService;
    item;
    name;
    isActiveMatchOptions;
    _horizontalNavigationComponent;
    _unsubscribeAll = new Subject();
    constructor(_changeDetectorRef, _navigationService) {
        this._changeDetectorRef = _changeDetectorRef;
        this._navigationService = _navigationService;
        // Set the equivalent of {exact: false} as default for active match options.
        // We are not assigning the item.isActiveMatchOptions directly to the
        // [routerLinkActiveOptions] because if it's "undefined" initially, the router
        // will throw an error and stop working.
        this.isActiveMatchOptions = UtilsHelper.subsetMatchOptions;
    }
    // -----------------------------------------------------------------------------------------------------
    // @ Lifecycle hooks
    // -----------------------------------------------------------------------------------------------------
    ngOnInit() {
        // Set the "isActiveMatchOptions" either from item's
        // "isActiveMatchOptions" or the equivalent form of
        // item's "exactMatch" option
        this.isActiveMatchOptions =
            (this.item.isActiveMatchOptions ?? this.item.exactMatch)
                ? UtilsHelper.exactMatchOptions
                : UtilsHelper.subsetMatchOptions;
        // Get the parent navigation component
        this._horizontalNavigationComponent = this._navigationService.getComponent(this.name);
        // Mark for check
        this._changeDetectorRef.markForCheck();
        // Subscribe to onRefreshed on the navigation component
        this._horizontalNavigationComponent.onRefreshed
            .pipe(takeUntil(this._unsubscribeAll))
            .subscribe(() => {
            // Mark for check
            this._changeDetectorRef.markForCheck();
        });
    }
    ngOnDestroy() {
        this._unsubscribeAll.next(null);
        this._unsubscribeAll.complete();
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.8", ngImport: i0, type: HorizontalNavigationBasicItemComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.NavigationService }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.8", type: HorizontalNavigationBasicItemComponent, isStandalone: true, selector: "horizontal-navigation-basic-item", inputs: { item: "item", name: "name" }, ngImport: i0, template: "<!-- Item wrapper -->\n<div\n  class=\"horizontal-navigation-item-wrapper\"\n  [class.horizontal-navigation-item-has-subtitle]=\"!!item.subtitle\"\n  [ngClass]=\"item.classes?.wrapper\"\n>\n  <!-- Item with an internal link -->\n  @if (item.link && !item.externalLink && !item.function && !item.disabled) {\n    <div\n      class=\"horizontal-navigation-item\"\n      [ngClass]=\"{ 'horizontal-navigation-item-active-forced': item.active }\"\n      [routerLink]=\"[item.link]\"\n      [fragment]=\"item.fragment\"\n      [preserveFragment]=\"item.preserveFragment ?? false\"\n      [queryParams]=\"item.queryParams\"\n      [queryParamsHandling]=\"item.queryParamsHandling\"\n      [routerLinkActive]=\"'horizontal-navigation-item-active'\"\n      [routerLinkActiveOptions]=\"isActiveMatchOptions\"\n    >\n      <ng-container *ngTemplateOutlet=\"itemTemplate\" />\n    </div>\n  }\n\n  <!-- Item with an external link -->\n  @if (item.link && item.externalLink && !item.function && !item.disabled) {\n    <a\n      class=\"horizontal-navigation-item\"\n      [href]=\"item.link\"\n      [target]=\"item.target || '_self'\"\n    >\n      <ng-container *ngTemplateOutlet=\"itemTemplate\" />\n    </a>\n  }\n\n  <!-- Item with a function -->\n  @if (!item.link && item.function && !item.disabled) {\n    <button\n      class=\"horizontal-navigation-item\"\n      [ngClass]=\"{ 'horizontal-navigation-item-active-forced': item.active }\"\n      (click)=\"item.function(item)\"\n    >\n      <ng-container *ngTemplateOutlet=\"itemTemplate\" />\n    </button>\n  }\n\n  <!-- Item with an internal link and function -->\n  @if (item.link && !item.externalLink && item.function && !item.disabled) {\n    <button\n      class=\"horizontal-navigation-item\"\n      [ngClass]=\"{ 'horizontal-navigation-item-active-forced': item.active }\"\n      [routerLink]=\"[item.link]\"\n      [fragment]=\"item.fragment\"\n      [preserveFragment]=\"item.preserveFragment ?? false\"\n      [queryParams]=\"item.queryParams\"\n      [queryParamsHandling]=\"item.queryParamsHandling\"\n      [routerLinkActive]=\"'horizontal-navigation-item-active'\"\n      [routerLinkActiveOptions]=\"isActiveMatchOptions\"\n      (click)=\"item.function(item)\"\n    >\n      <ng-container *ngTemplateOutlet=\"itemTemplate\" />\n    </button>\n  }\n\n  <!-- Item with an external link and function -->\n  @if (item.link && item.externalLink && item.function && !item.disabled) {\n    <a\n      class=\"horizontal-navigation-item\"\n      [href]=\"item.link\"\n      [target]=\"item.target || '_self'\"\n      (click)=\"item.function(item)\"\n    >\n      <ng-container *ngTemplateOutlet=\"itemTemplate\" />\n    </a>\n  }\n\n  <!-- Item with a no link and no function -->\n  @if (!item.link && !item.function && !item.disabled) {\n    <div\n      class=\"horizontal-navigation-item\"\n      [ngClass]=\"{ 'horizontal-navigation-item-active-forced': item.active }\"\n    >\n      <ng-container *ngTemplateOutlet=\"itemTemplate\" />\n    </div>\n  }\n\n  <!-- Item is disabled -->\n  @if (item.disabled) {\n    <div class=\"horizontal-navigation-item horizontal-navigation-item-disabled\">\n      <ng-container *ngTemplateOutlet=\"itemTemplate\" />\n    </div>\n  }\n</div>\n\n<!-- Item template -->\n<ng-template #itemTemplate>\n  <!-- Icon -->\n  @if (item.icon) {\n    <svg-icon\n      class=\"horizontal-navigation-item-icon\"\n      [ngClass]=\"item.classes?.icon\"\n      [name]=\"item.icon\"\n    />\n  }\n\n  <!-- Title & Subtitle -->\n  <div class=\"horizontal-navigation-item-title-wrapper\">\n    <div class=\"horizontal-navigation-item-title\">\n      <span [ngClass]=\"item.classes?.title\">\n        {{ item.title }}\n      </span>\n    </div>\n    @if (item.subtitle) {\n      <div class=\"horizontal-navigation-item-subtitle text-hint\">\n        <span [ngClass]=\"item.classes?.subtitle\">\n          {{ item.subtitle }}\n        </span>\n      </div>\n    }\n  </div>\n\n  <!-- Badge -->\n  @if (item.badge) {\n    <div class=\"horizontal-navigation-item-badge\">\n      <div\n        class=\"horizontal-navigation-item-badge-content\"\n        [ngClass]=\"item.badge.classes\"\n      >\n        {{ item.badge.title }}\n      </div>\n    </div>\n  }\n</ng-template>\n", dependencies: [{ kind: "directive", type: NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "info", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "directive", type: RouterLinkActive, selector: "[routerLinkActive]", inputs: ["routerLinkActiveOptions", "ariaCurrentWhenActive", "routerLinkActive"], outputs: ["isActiveChange"], exportAs: ["routerLinkActive"] }, { kind: "ngmodule", type: SvgIconModule }, { kind: "component", type: i2.SvgIcon, selector: "svg-icon", inputs: ["inline", "name", "fontSet", "fontIcon"], exportAs: ["svgIcon"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.8", ngImport: i0, type: HorizontalNavigationBasicItemComponent, decorators: [{
            type: Component,
            args: [{ selector: 'horizontal-navigation-basic-item', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [NgClass, NgTemplateOutlet, RouterLink, RouterLinkActive, SvgIconModule], template: "<!-- Item wrapper -->\n<div\n  class=\"horizontal-navigation-item-wrapper\"\n  [class.horizontal-navigation-item-has-subtitle]=\"!!item.subtitle\"\n  [ngClass]=\"item.classes?.wrapper\"\n>\n  <!-- Item with an internal link -->\n  @if (item.link && !item.externalLink && !item.function && !item.disabled) {\n    <div\n      class=\"horizontal-navigation-item\"\n      [ngClass]=\"{ 'horizontal-navigation-item-active-forced': item.active }\"\n      [routerLink]=\"[item.link]\"\n      [fragment]=\"item.fragment\"\n      [preserveFragment]=\"item.preserveFragment ?? false\"\n      [queryParams]=\"item.queryParams\"\n      [queryParamsHandling]=\"item.queryParamsHandling\"\n      [routerLinkActive]=\"'horizontal-navigation-item-active'\"\n      [routerLinkActiveOptions]=\"isActiveMatchOptions\"\n    >\n      <ng-container *ngTemplateOutlet=\"itemTemplate\" />\n    </div>\n  }\n\n  <!-- Item with an external link -->\n  @if (item.link && item.externalLink && !item.function && !item.disabled) {\n    <a\n      class=\"horizontal-navigation-item\"\n      [href]=\"item.link\"\n      [target]=\"item.target || '_self'\"\n    >\n      <ng-container *ngTemplateOutlet=\"itemTemplate\" />\n    </a>\n  }\n\n  <!-- Item with a function -->\n  @if (!item.link && item.function && !item.disabled) {\n    <button\n      class=\"horizontal-navigation-item\"\n      [ngClass]=\"{ 'horizontal-navigation-item-active-forced': item.active }\"\n      (click)=\"item.function(item)\"\n    >\n      <ng-container *ngTemplateOutlet=\"itemTemplate\" />\n    </button>\n  }\n\n  <!-- Item with an internal link and function -->\n  @if (item.link && !item.externalLink && item.function && !item.disabled) {\n    <button\n      class=\"horizontal-navigation-item\"\n      [ngClass]=\"{ 'horizontal-navigation-item-active-forced': item.active }\"\n      [routerLink]=\"[item.link]\"\n      [fragment]=\"item.fragment\"\n      [preserveFragment]=\"item.preserveFragment ?? false\"\n      [queryParams]=\"item.queryParams\"\n      [queryParamsHandling]=\"item.queryParamsHandling\"\n      [routerLinkActive]=\"'horizontal-navigation-item-active'\"\n      [routerLinkActiveOptions]=\"isActiveMatchOptions\"\n      (click)=\"item.function(item)\"\n    >\n      <ng-container *ngTemplateOutlet=\"itemTemplate\" />\n    </button>\n  }\n\n  <!-- Item with an external link and function -->\n  @if (item.link && item.externalLink && item.function && !item.disabled) {\n    <a\n      class=\"horizontal-navigation-item\"\n      [href]=\"item.link\"\n      [target]=\"item.target || '_self'\"\n      (click)=\"item.function(item)\"\n    >\n      <ng-container *ngTemplateOutlet=\"itemTemplate\" />\n    </a>\n  }\n\n  <!-- Item with a no link and no function -->\n  @if (!item.link && !item.function && !item.disabled) {\n    <div\n      class=\"horizontal-navigation-item\"\n      [ngClass]=\"{ 'horizontal-navigation-item-active-forced': item.active }\"\n    >\n      <ng-container *ngTemplateOutlet=\"itemTemplate\" />\n    </div>\n  }\n\n  <!-- Item is disabled -->\n  @if (item.disabled) {\n    <div class=\"horizontal-navigation-item horizontal-navigation-item-disabled\">\n      <ng-container *ngTemplateOutlet=\"itemTemplate\" />\n    </div>\n  }\n</div>\n\n<!-- Item template -->\n<ng-template #itemTemplate>\n  <!-- Icon -->\n  @if (item.icon) {\n    <svg-icon\n      class=\"horizontal-navigation-item-icon\"\n      [ngClass]=\"item.classes?.icon\"\n      [name]=\"item.icon\"\n    />\n  }\n\n  <!-- Title & Subtitle -->\n  <div class=\"horizontal-navigation-item-title-wrapper\">\n    <div class=\"horizontal-navigation-item-title\">\n      <span [ngClass]=\"item.classes?.title\">\n        {{ item.title }}\n      </span>\n    </div>\n    @if (item.subtitle) {\n      <div class=\"horizontal-navigation-item-subtitle text-hint\">\n        <span [ngClass]=\"item.classes?.subtitle\">\n          {{ item.subtitle }}\n        </span>\n      </div>\n    }\n  </div>\n\n  <!-- Badge -->\n  @if (item.badge) {\n    <div class=\"horizontal-navigation-item-badge\">\n      <div\n        class=\"horizontal-navigation-item-badge-content\"\n        [ngClass]=\"item.badge.classes\"\n      >\n        {{ item.badge.title }}\n      </div>\n    </div>\n  }\n</ng-template>\n" }]
        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.NavigationService }], propDecorators: { item: [{
                type: Input
            }], name: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,