{"version":3,"file":"libs-scrollbar.mjs","sources":["../../src/lib/scrollbar.types.ts","../../src/lib/scrollbar.directive.ts","../../src/public-api.ts","../../src/libs-scrollbar.ts"],"sourcesContent":["export class ScrollbarGeometry {\n  public x: number;\n  public y: number;\n\n  public w: number;\n  public h: number;\n\n  constructor(x: number, y: number, w: number, h: number) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n  }\n}\n\nexport class ScrollbarPosition {\n  public x: number | 'start' | 'end';\n  public y: number | 'start' | 'end';\n\n  constructor(x: number | 'start' | 'end', y: number | 'start' | 'end') {\n    this.x = x;\n    this.y = y;\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n} from '@angular/core';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\n\nimport { merge } from 'es-toolkit';\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport { debounceTime, fromEvent, Subject, takeUntil } from 'rxjs';\nimport { ScrollbarGeometry, ScrollbarPosition } from './scrollbar.types';\n\n/**\n * Wrapper directive for the Perfect Scrollbar:\n * https://github.com/mdbootstrap/perfect-scrollbar\n */\n@Directive({\n  selector: '[scrollbar]',\n  exportAs: 'scrollbar',\n  standalone: true,\n})\nexport class ScrollbarDirective implements OnChanges, OnInit, OnDestroy {\n  static ngAcceptInputType_scrollbar: BooleanInput;\n\n  @Input() scrollbar = true;\n  @Input() scrollbarOptions: PerfectScrollbar.Options;\n\n  private _animation: number;\n  private _options: PerfectScrollbar.Options;\n  private _ps: PerfectScrollbar;\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n  /**\n   * Constructor\n   */\n  constructor(\n    private _elementRef: ElementRef,\n    private _platform: Platform\n  ) {}\n\n  // -----------------------------------------------------------------------------------------------------\n  // @ Accessors\n  // -----------------------------------------------------------------------------------------------------\n\n  get elementRef(): ElementRef {\n    return this._elementRef;\n  }\n\n  get ps(): PerfectScrollbar | null {\n    return this._ps;\n  }\n\n  // -----------------------------------------------------------------------------------------------------\n  // @ Lifecycle hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // Enabled\n    if ('scrollbar' in changes) {\n      // Interpret empty string as 'true'\n      this.scrollbar = coerceBooleanProperty(changes['scrollbar'].currentValue);\n\n      // If enabled, init the directive\n      if (this.scrollbar) {\n        this._init();\n      }\n      // Otherwise destroy it\n      else {\n        this._destroy();\n      }\n    }\n\n    // Scrollbar options\n    if ('scrollbarOptions' in changes) {\n      // Merge the options\n      this._options = merge(this._options, changes['scrollbarOptions'].currentValue);\n\n      // Return if not initialized\n      if (!this._ps) {\n        return;\n      }\n\n      // Destroy and re-init the PerfectScrollbar to update its options\n      setTimeout(() => {\n        this._destroy();\n      });\n\n      setTimeout(() => {\n        this._init();\n      });\n    }\n  }\n\n  ngOnInit(): void {\n    // Subscribe to window resize event\n    fromEvent(window, 'resize')\n      .pipe(takeUntil(this._unsubscribeAll), debounceTime(150))\n      .subscribe(() => {\n        // Update the PerfectScrollbar\n        this.update();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this._destroy();\n\n    // Unsubscribe from all subscriptions\n    this._unsubscribeAll.next(null);\n    this._unsubscribeAll.complete();\n  }\n\n  // -----------------------------------------------------------------------------------------------------\n  // @ Public methods\n  // -----------------------------------------------------------------------------------------------------\n\n  isEnabled(): boolean {\n    return this.scrollbar;\n  }\n\n  update(): void {\n    // Return if not initialized\n    if (!this._ps) {\n      return;\n    }\n\n    // Update the PerfectScrollbar\n    this._ps.update();\n  }\n\n  destroy(): void {\n    this.ngOnDestroy();\n  }\n\n  geometry(prefix = 'scroll'): ScrollbarGeometry {\n    return new ScrollbarGeometry(\n      this._elementRef.nativeElement[prefix + 'Left'],\n      this._elementRef.nativeElement[prefix + 'Top'],\n      this._elementRef.nativeElement[prefix + 'Width'],\n      this._elementRef.nativeElement[prefix + 'Height']\n    );\n  }\n\n  position(absolute = false): ScrollbarPosition {\n    let scrollbarPosition;\n\n    if (!absolute && this._ps) {\n      scrollbarPosition = new ScrollbarPosition(this._ps.reach.x || 0, this._ps.reach.y || 0);\n    } else {\n      scrollbarPosition = new ScrollbarPosition(\n        this._elementRef.nativeElement.scrollLeft,\n        this._elementRef.nativeElement.scrollTop\n      );\n    }\n\n    return scrollbarPosition;\n  }\n\n  scrollTo(x: number, y?: number, speed?: number): void {\n    if (y == null && speed == null) {\n      this.animateScrolling('scrollTop', x, speed);\n    } else {\n      if (x != null) {\n        this.animateScrolling('scrollLeft', x, speed);\n      }\n\n      if (y != null) {\n        this.animateScrolling('scrollTop', y, speed);\n      }\n    }\n  }\n\n  scrollToX(x: number, speed?: number): void {\n    this.animateScrolling('scrollLeft', x, speed);\n  }\n\n  scrollToY(y: number, speed?: number): void {\n    this.animateScrolling('scrollTop', y, speed);\n  }\n\n  scrollToTop(offset = 0, speed?: number): void {\n    this.animateScrolling('scrollTop', offset, speed);\n  }\n\n  scrollToBottom(offset = 0, speed?: number): void {\n    const top =\n      this._elementRef.nativeElement.scrollHeight - this._elementRef.nativeElement.clientHeight;\n    this.animateScrolling('scrollTop', top - offset, speed);\n  }\n\n  scrollToLeft(offset = 0, speed?: number): void {\n    this.animateScrolling('scrollLeft', offset, speed);\n  }\n\n  scrollToRight(offset = 0, speed?: number): void {\n    const left =\n      this._elementRef.nativeElement.scrollWidth - this._elementRef.nativeElement.clientWidth;\n    this.animateScrolling('scrollLeft', left - offset, speed);\n  }\n\n  scrollToElement(qs: string, offset = 0, ignoreVisible = false, speed?: number): void {\n    const element = this._elementRef.nativeElement.querySelector(qs);\n\n    if (!element) {\n      return;\n    }\n\n    const elementPos = element.getBoundingClientRect();\n    const scrollerPos = this._elementRef.nativeElement.getBoundingClientRect();\n\n    if (this._elementRef.nativeElement.classList.contains('ps--active-x')) {\n      if (ignoreVisible && elementPos.right <= scrollerPos.right - Math.abs(offset)) {\n        return;\n      }\n\n      const currentPos = this._elementRef.nativeElement['scrollLeft'];\n      const position = elementPos.left - scrollerPos.left + currentPos;\n\n      this.animateScrolling('scrollLeft', position + offset, speed);\n    }\n\n    if (this._elementRef.nativeElement.classList.contains('ps--active-y')) {\n      if (ignoreVisible && elementPos.bottom <= scrollerPos.bottom - Math.abs(offset)) {\n        return;\n      }\n\n      const currentPos = this._elementRef.nativeElement['scrollTop'];\n      const position = elementPos.top - scrollerPos.top + currentPos;\n\n      this.animateScrolling('scrollTop', position + offset, speed);\n    }\n  }\n\n  animateScrolling(target: string, value: number, speed?: number): void {\n    if (this._animation) {\n      window.cancelAnimationFrame(this._animation);\n      this._animation = null as any;\n    }\n\n    if (!speed || typeof window === 'undefined') {\n      this._elementRef.nativeElement[target] = value;\n    } else if (value !== this._elementRef.nativeElement[target]) {\n      let newValue = 0;\n      let scrollCount = 0;\n\n      let oldTimestamp = performance.now();\n      let oldValue = this._elementRef.nativeElement[target];\n\n      const cosParameter = (oldValue - value) / 2;\n\n      const step = (newTimestamp: number): void => {\n        scrollCount += Math.PI / (speed / (newTimestamp - oldTimestamp));\n        newValue = Math.round(value + cosParameter + cosParameter * Math.cos(scrollCount));\n\n        // Only continue animation if scroll position has not changed\n        if (this._elementRef.nativeElement[target] === oldValue) {\n          if (scrollCount >= Math.PI) {\n            this.animateScrolling(target, value, 0);\n          } else {\n            this._elementRef.nativeElement[target] = newValue;\n\n            // On a zoomed out page the resulting offset may differ\n            oldValue = this._elementRef.nativeElement[target];\n            oldTimestamp = newTimestamp;\n\n            this._animation = window.requestAnimationFrame(step);\n          }\n        }\n      };\n\n      window.requestAnimationFrame(step);\n    }\n  }\n\n  // -----------------------------------------------------------------------------------------------------\n  // @ Private methods\n  // -----------------------------------------------------------------------------------------------------\n\n  private _init(): void {\n    // Return if already initialized\n    if (this._ps) {\n      return;\n    }\n\n    // Return if on mobile or not on browser\n    if (this._platform.ANDROID || this._platform.IOS || !this._platform.isBrowser) {\n      this.scrollbar = false;\n      return;\n    }\n\n    // Initialize the PerfectScrollbar\n    this._ps = new PerfectScrollbar(this._elementRef.nativeElement, { ...this._options });\n  }\n\n  private _destroy(): void {\n    // Return if not initialized\n    if (!this._ps) {\n      return;\n    }\n\n    // Destroy the PerfectScrollbar\n    this._ps.destroy();\n\n    // Clean up\n    this._ps = null as any;\n  }\n}\n","/*\n * Public API Surface of scrollbar\n */\n\nexport * from './lib/scrollbar.directive';\nexport * from './lib/scrollbar.types';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}